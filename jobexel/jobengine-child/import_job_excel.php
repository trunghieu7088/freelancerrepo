<?php
	use PhpOffice\PhpSpreadsheet\Spreadsheet;
	use PhpOffice\PhpSpreadsheet\Writer\Xlsx;


//add menu


function job_import_settings_init(){
    add_menu_page( 'Job Import', 'Job Import', 'manage_options', 'job-import-bulk', 'job_import_callback','dashicons-cloud-upload',10 );
}

add_action('admin_menu', 'job_import_settings_init');

//callback of menu

function job_import_callback()
{
	?>
	
	<h3>Please select excel file to import jobs</h3>
	<table>
		 <tr class="form-field">       
        <td>      
        	<form method="POST" enctype="multipart/form-data" action="<?php echo admin_url( 'admin.php' ); ?>">
         		 <input type="hidden" name="action" value="upload_excel_action" />
               <input type="file" class="" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" id="add_file_job" name="add_file_job" value="Add file"/>
               <br>
               <br>               
               <input type="submit" value="Submit" class="button button-primary">
           </form>
        </td>
    </tr>
	</table>
	<?php

	if($_GET['Addsuccess']=='true')
	{
		echo '<div class="notice notice-success is-dismissible">
        <p>Import successfully</p>
    </div>';
	}
	if($_GET['Addsuccess']=='false')
	{
		echo '<div class="notice notice-error is-dismissible">
        <p>Import failed, there is something wrong with your file</p>
    </div>';
	}
}

//handling form upload

add_action( 'admin_action_upload_excel_action', 'upload_excel_action_function' );
function upload_excel_action_function()
{
	if ( ! function_exists( 'wp_handle_upload' ) ) {
    require_once( ABSPATH . 'wp-admin/includes/file.php' );
	}

	$uploadedfile = $_FILES['add_file_job'];

    $upload_overrides = array(
	'test_form' => false
);

	$movefile = wp_handle_upload( $uploadedfile, $upload_overrides );
	

	if ( $movefile && ! isset( $movefile['error'] ) ) {
   // echo __( 'File is valid, and was successfully uploaded.', 'textdomain' ) . "\n";
    //var_dump( $movefile );
		do_action('UploadExcelJob',$movefile['url']);
		wp_redirect( $_SERVER['HTTP_REFERER'].'&Addsuccess=true' );
} else {
    /*
     * Error generated by _wp_handle_upload()
     * @see _wp_handle_upload() in wp-admin/includes/file.php
     */
    //echo $movefile['error'];
     wp_redirect( $_SERVER['HTTP_REFERER'].'&Addsuccess=false' );
}

  
    exit();
}


//add_action('init','testlib');

add_action('UploadExcelJob','UploadExcelJobFunction',10,1);
	

function UploadExcelJobFunction($url_file)
{

	require ('vendor/autoload.php');
	
	$spreadsheet = new Spreadsheet();

	$inputFileType = 'Xlsx';
	//$inputFileName = esc_url(get_stylesheet_directory_uri().'/test.xlsx');
//	$inputFileName = '/test.xlsx';
		
		//$filename = get_stylesheet_directory_uri().'/test.xlsx';
	$filename = $url_file;

$file = file_get_contents($filename);
$inputFileName = 'jobimport.xlsx';

file_put_contents($inputFileName, $file);


	/**  Create a new Reader of the type defined in $inputFileType  **/
	$reader = \PhpOffice\PhpSpreadsheet\IOFactory::createReader($inputFileType);
		/**  Advise the Reader that we only want to load cell data  **/
	$reader->setReadDataOnly(true);
	//$worksheetData = $reader->listWorksheetInfo($inputFileName);

	//var_dump($worksheetData);

	//$reader->setLoadSheetsOnly($sheetName);
$spreadsheet = $reader->load($inputFileName);

$worksheet = $spreadsheet->getActiveSheet();

$worksheetItems=$worksheet->toArray();


$newsheet=array_slice($worksheetItems,1);

$labelArray=array('orderNum','job_title','job_description','job_location','contract_type','job_category','email_apply','owner_username','post_date');
foreach($newsheet as $key => $value)
{
	//var_dump($value);
	//var_dump($newValue);
	$newValue=array_combine($labelArray,$value);
	$user_insert=get_user_by('login',$newValue['owner_username']);

	$datetime = DateTime::createFromFormat('d-m-Y : H-i-s', $newValue['post_date']);
	$datetimeFormatted = $datetime->format('Y-m-d H:i:s');

	$job_post_data=array(
		'post_type'=>'job',
		'post_status' =>'publish',
		'post_title' => $newValue['job_title'],
		'post_content' => $newValue['job_description'],
		'post_name' => sanitize_title($newValue['job_title']),
		'post_author' =>$user_insert->ID,
		'post_date' => $datetimeFormatted,
		//'post_date_gmt' => $newValue['post_date'],
		//'post_modified'=>$newValue['post_date'],
		//'post_modified_gmt' => $newValue['post_date'],

	);
	$user_custom=wp_get_current_user();
	$job_post_ID=wp_insert_post($job_post_data);
	if($job_post_ID)
	{
		update_post_meta($job_post_ID,'et_location',$newValue['job_location']);
		update_post_meta($job_post_ID,'et_full_location',$newValue['job_location']);		
		update_post_meta($job_post_ID,'et_template_id','normal');
		update_post_meta($job_post_ID,'et_post_views',0);
		update_post_meta($job_post_ID,'et_job_paid',1);
		//$customDate=date("Y-m-d : h-i-s",strtotime(' + 1 year'));
		$customDate = date("Y-m-d h:i:s", strtotime($datetimeFormatted . ' + 1 year'));
		update_post_meta($job_post_ID,'et_expired_date',$customDate);
		$contractType=get_term_by('name',$newValue['contract_type'],'job_type');
		$jobCategory=get_term_by('name',$newValue['job_category'],'job_category');
		//wp_set_object_terms( $job_post_ID, (int)$contractType->term_id, 'job_type' );
		//wp_set_object_terms( $job_post_ID, (int)$jobCategory->term_id, 'job_category' );

		if (!filter_var($newValue['email_apply'], FILTER_VALIDATE_EMAIL)) 
		{
  			 	
  			update_post_meta($job_post_ID,'et_apply_method','ishowtoapply'); 
			update_post_meta($job_post_ID,'et_applicant_detail',$newValue['email_apply']); 					
		}
		else
		{
			update_post_meta($job_post_ID,'et_apply_method','');  
  			update_post_meta($job_post_ID,'et_applicant_detail','');
  			update_post_meta($job_post_ID,'et_apply_email',$newValue['email_apply']);
					 				
		}			
		
		
		
	
		wp_set_post_terms($job_post_ID, array((int)$contractType->term_id),'job_type');
		wp_set_post_terms($job_post_ID,  array((int) $jobCategory->term_id),'job_category');
		
	}

}


}

